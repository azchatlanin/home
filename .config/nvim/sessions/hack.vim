" /mnt/store/home/.config/nvim/sessions/hack.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 03 March 2022 at 12:01:08.
" Open this file in Vim and run :source % to restore your session.

if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'spacedark' | colorscheme spacedark | endif
call setqflist([])
let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd /mnt/develop/projects/cpp/hack/src/container
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
argglobal
%argdel
edit /mnt/develop/projects/cpp/hack/src/container/container.hpp
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 1 + 104) / 208)
exe 'vert 2resize ' . ((&columns * 185 + 104) / 208)
exe 'vert 3resize ' . ((&columns * 20 + 104) / 208)
argglobal
enew
file /mnt/develop/projects/cpp/hack/src/container/NvimTree_1
balt /mnt/develop/projects/cpp/hack/src/container/container.cpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=2
setlocal fml=1
setlocal fdn=10
setlocal nofen
lcd /mnt/develop/projects/cpp/hack
wincmd w
argglobal
balt /mnt/develop/projects/cpp/hack/src/container/container.cpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=2
setlocal fml=1
setlocal fdn=10
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 1 - ((0 * winheight(0) + 57) / 115)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
lcd /mnt/develop/projects/cpp/hack
wincmd w
argglobal
if bufexists("term:///mnt/develop/projects/cpp/hack/src/string//44199:/bin/bash;\#toggleterm\#4") | buffer term:///mnt/develop/projects/cpp/hack/src/string//44199:/bin/bash;\#toggleterm\#4 | else | edit term:///mnt/develop/projects/cpp/hack/src/string//44199:/bin/bash;\#toggleterm\#4 | endif
if &buftype ==# 'terminal'
  silent file term:///mnt/develop/projects/cpp/hack/src/string//44199:/bin/bash;\#toggleterm\#4
endif
balt /mnt/develop/projects/cpp/hack/src/container/container.cpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=2
setlocal fml=1
setlocal fdn=10
setlocal fen
let s:l = 14 - ((13 * winheight(0) + 57) / 115)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 14
normal! 0
lcd /mnt/develop/projects/cpp/hack
wincmd w
3wincmd w
exe 'vert 1resize ' . ((&columns * 1 + 104) / 208)
exe 'vert 2resize ' . ((&columns * 185 + 104) / 208)
exe 'vert 3resize ' . ((&columns * 20 + 104) / 208)
tabnext 1
badd +1 /mnt/develop/projects/cpp/hack/src/container/container.hpp
badd +23 /mnt/develop/projects/cpp/hack/src/string/string.cpp
badd +0 /mnt/develop/projects/cpp/hack/bin/main.cpp
badd +9 /mnt/develop/projects/cpp/hack/src/string/string.hpp
badd +1 /mnt/develop/projects/cpp/hack/src/container/container.cpp
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=nFocitOflxT
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

3wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
